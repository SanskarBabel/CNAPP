{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  dashboardName: \"Security Dashboard\",\n  categories: [{\n    id: \"cspm\",\n    name: \"CSPM Executive Dashboard\",\n    widgets: [{\n      id: \"widget1\",\n      name: \"Cloud Accounts\",\n      text: \"Connected: 2, Not Connected: 2\"\n    }, {\n      id: \"widget2\",\n      name: \"Cloud Account Risk Assessment\",\n      text: \"Failed: 1689, Warning: 681, Not Available: 36, Passed: 7253\"\n    }]\n  }, {\n    id: \"cwpp\",\n    name: \"CWPP Dashboard\",\n    widgets: [{\n      id: \"widget3\",\n      name: \"Top 5 Namespace Specific Alerts\",\n      text: \"No graph data available\"\n    }, {\n      id: \"widget4\",\n      name: \"Workload Alerts\",\n      text: \"No graph data available\"\n    }]\n  }, {\n    id: \"registry\",\n    name: \"Registry Scan\",\n    widgets: [{\n      id: \"widget5\",\n      name: \"Image Risk Assessment\",\n      text: \"Critical: 9, High: 150, Medium: 8, Low: 8\"\n    }, {\n      id: \"widget6\",\n      name: \"Image Security Issues\",\n      text: \"Critical: 2, High: 2, Medium: 8, Low: 8\"\n    }]\n  }],\n  searchTerm: '',\n  isAddWidgetModalOpen: false,\n  selectedCategoryId: null\n};\nconst widgetSlice = createSlice({\n  name: 'widgets',\n  initialState,\n  reducers: {\n    addWidget: (state, action) => {\n      const {\n        categoryId,\n        widget\n      } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      if (category) {\n        widget.id = `widget${Date.now()}`;\n        category.widgets.push(widget);\n      }\n    },\n    removeWidget: (state, action) => {\n      const {\n        categoryId,\n        widgetId\n      } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      if (category) {\n        category.widgets = category.widgets.filter(widget => widget.id !== widgetId);\n      }\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n    openAddWidgetModal: (state, action) => {\n      state.isAddWidgetModalOpen = true;\n      state.selectedCategoryId = action.payload;\n    },\n    closeAddWidgetModal: state => {\n      state.isAddWidgetModalOpen = false;\n      state.selectedCategoryId = null;\n    },\n    updateWidget: (state, action) => {\n      const {\n        categoryId,\n        widgetId,\n        updatedWidget\n      } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      if (category) {\n        const widgetIndex = category.widgets.findIndex(widget => widget.id === widgetId);\n        if (widgetIndex !== -1) {\n          category.widgets[widgetIndex] = {\n            ...category.widgets[widgetIndex],\n            ...updatedWidget\n          };\n        }\n      }\n    }\n  }\n});\nexport const {\n  addWidget,\n  removeWidget,\n  setSearchTerm,\n  openAddWidgetModal,\n  closeAddWidgetModal,\n  updateWidget\n} = widgetSlice.actions;\nexport default widgetSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","dashboardName","categories","id","name","widgets","text","searchTerm","isAddWidgetModalOpen","selectedCategoryId","widgetSlice","reducers","addWidget","state","action","categoryId","widget","payload","category","find","cat","Date","now","push","removeWidget","widgetId","filter","setSearchTerm","openAddWidgetModal","closeAddWidgetModal","updateWidget","updatedWidget","widgetIndex","findIndex","actions","reducer"],"sources":["C:/Users/HP/Documents/CSS/Cnapp/client/src/store/widgetSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  dashboardName: \"Security Dashboard\",\n  categories: [\n    {\n      id: \"cspm\",\n      name: \"CSPM Executive Dashboard\",\n      widgets: [\n        {\n          id: \"widget1\",\n          name: \"Cloud Accounts\",\n          text: \"Connected: 2, Not Connected: 2\"\n        },\n        {\n          id: \"widget2\", \n          name: \"Cloud Account Risk Assessment\",\n          text: \"Failed: 1689, Warning: 681, Not Available: 36, Passed: 7253\"\n        }\n      ]\n    },\n    {\n      id: \"cwpp\",\n      name: \"CWPP Dashboard\", \n      widgets: [\n        {\n          id: \"widget3\",\n          name: \"Top 5 Namespace Specific Alerts\",\n          text: \"No graph data available\"\n        },\n        {\n          id: \"widget4\",\n          name: \"Workload Alerts\", \n          text: \"No graph data available\"\n        }\n      ]\n    },\n    {\n      id: \"registry\",\n      name: \"Registry Scan\",\n      widgets: [\n        {\n          id: \"widget5\",\n          name: \"Image Risk Assessment\",\n          text: \"Critical: 9, High: 150, Medium: 8, Low: 8\"\n        },\n        {\n          id: \"widget6\",\n          name: \"Image Security Issues\",\n          text: \"Critical: 2, High: 2, Medium: 8, Low: 8\"\n        }\n      ]\n    }\n  ],\n  searchTerm: '',\n  isAddWidgetModalOpen: false,\n  selectedCategoryId: null\n};\n\nconst widgetSlice = createSlice({\n  name: 'widgets',\n  initialState,\n  reducers: {\n    addWidget: (state, action) => {\n      const { categoryId, widget } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      if (category) {\n        widget.id = `widget${Date.now()}`;\n        category.widgets.push(widget);\n      }\n    },\n    removeWidget: (state, action) => {\n      const { categoryId, widgetId } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      if (category) {\n        category.widgets = category.widgets.filter(widget => widget.id !== widgetId);\n      }\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n    openAddWidgetModal: (state, action) => {\n      state.isAddWidgetModalOpen = true;\n      state.selectedCategoryId = action.payload;\n    },\n    closeAddWidgetModal: (state) => {\n      state.isAddWidgetModalOpen = false;\n      state.selectedCategoryId = null;\n    },\n    updateWidget: (state, action) => {\n      const { categoryId, widgetId, updatedWidget } = action.payload;\n      const category = state.categories.find(cat => cat.id === categoryId);\n      if (category) {\n        const widgetIndex = category.widgets.findIndex(widget => widget.id === widgetId);\n        if (widgetIndex !== -1) {\n          category.widgets[widgetIndex] = { ...category.widgets[widgetIndex], ...updatedWidget };\n        }\n      }\n    }\n  }\n});\n\nexport const { \n  addWidget, \n  removeWidget, \n  setSearchTerm, \n  openAddWidgetModal, \n  closeAddWidgetModal,\n  updateWidget \n} = widgetSlice.actions;\n\nexport default widgetSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}